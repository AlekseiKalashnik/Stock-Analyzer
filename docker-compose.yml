#version: '3.8'
#services:
#  app:
#    image: docker-app
#    ports:
#      - "8181:8181"
#    depends_on:
#      db:
#        condition: service_healthy
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: "stock_app"
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/stock_db
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=1111
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
#
#  db:
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
#      interval: 3s
#      timeout: 6s
#      retries: 10
#    image: postgres
#    container_name: "postgresql_container"
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=1111
#      - POSTGRES_DB=stock_db
#    ports:
#      - "5432:5432"
#    restart: unless-stopped
#
#  pgadmin:
#    container_name: pgadmin4_container
#    image: dpage/pgadmin4:7
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: 1111
#    ports:
#      - "5050:80"
#

#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: alb-demo-tls
#  annotations:
#    ingress.alb.yc.io/subnets: e9bksm3k51463b0ojr5r
#    ingress.alb.yc.io/external-ipv4-address: auto
#    ingress.alb.yc.io/group-name: default
#spec:
#  tls:
#    - hosts:
#        - stocks-analyzer.com
#      secretName: yc-certmgr-cert-id-fpqtp82qsr44rdppq6ib
#  rules:
#    - host: stocks-analyzer.com
#      http:
#        paths:
#          - pathType: Prefix
#            path: "/"
#            backend:
#              service:
#                name: service-hello
#                port:
#                  name: http
#---
#apiVersion: v1
#  kind: Service
#  metadata:
#    name: service-hello
#  spec:
#    selector:
#      run: hello-nginx
#    type: NodePort
#    ports:
#      - name: http
#        port: 80
#        targetPort: 80
#        protocol: TCP
#        nodePort: 30080
