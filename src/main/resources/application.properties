server.port=8181
spring.config.import=optional:file:.env[.properties]

spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.show-sql=false
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

iexapi.host=${IEXAPI_HOST}
iexapi.token=${IEXAPI_TOKEN}
iexapi.stock_request=${IEXAPI_STOCK_REQUEST}
iexapi.companies_request=${IEXAPI_COMPANIES_REQUEST}

exc.service.threads.amount=4
process.stocks.data.interval=5000

spring.security.oauth2.client.registration.google.client-id=${OAUTH2_CLIENT_GOOGLE_CLIENT-ID}
spring.security.oauth2.client.registration.google.client-secret=${OAUTH2_CLIENT_GOOGLE_CLIENT-SECRET}

topic.name=topic-1
#spring.kafka.consumer.group-id=group-1
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

#spring.security.oauth2.client.registration.google.client-secret=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
#spring.security.oauth2.client.registration.github.client-id=Iv1.c49badb4dc9a2d42
#spring.security.oauth2.client.registration.github.client-secret=ab9fcf2dbec71490f16c642549377de9d741c8d2


